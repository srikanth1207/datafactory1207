{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "sDataFactory1207"
		},
		"logdata_metrics_sdatabase_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'logdata_metrics_sdatabase'"
		},
		"sdatalake_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'sdatalake'"
		},
		"sstorage1207_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'sstorage1207'"
		},
		"sstorage1207a_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'sstorage1207a'"
		},
		"synapse_logdataparquet_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'synapse_logdataparquet'"
		},
		"sdatalake_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sdatalake1207.dfs.core.windows.net/"
		},
		"sstorage1207_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sstorage1207.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/logdata_metrics_sdatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('logdata_metrics_sdatabase_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sdatalake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('sdatalake_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('sdatalake_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sstorage1207')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('sstorage1207_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('sstorage1207_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sstorage1207a')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('sstorage1207a_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/synapse_logdataparquet')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('synapse_logdataparquet_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/logdata_metrics')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "logdata_metrics_sdatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "time",
						"type": "varchar"
					},
					{
						"name": "resourceid",
						"type": "varchar"
					},
					{
						"name": "category",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "logdata_metrics"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/logdata_metrics_sdatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/logdata_synapse')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "synapse_logdataparquet",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Correlationid",
						"type": "varchar"
					},
					{
						"name": "Operationname",
						"type": "varchar"
					},
					{
						"name": "Status",
						"type": "varchar"
					},
					{
						"name": "Eventcategory",
						"type": "varchar"
					},
					{
						"name": "Level",
						"type": "varchar"
					},
					{
						"name": "Time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Subscription",
						"type": "varchar"
					},
					{
						"name": "Eventinitiatedby",
						"type": "varchar"
					},
					{
						"name": "Resourcetype",
						"type": "varchar"
					},
					{
						"name": "Resourcegroup",
						"type": "varchar"
					},
					{
						"name": "Resource",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "logdata_parquet"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/synapse_logdataparquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/logdatacsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sdatalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Log.csv",
						"fileSystem": "csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Correlation id",
						"type": "String"
					},
					{
						"name": "Operation name",
						"type": "String"
					},
					{
						"name": "Status",
						"type": "String"
					},
					{
						"name": "Event category",
						"type": "String"
					},
					{
						"name": "Level",
						"type": "String"
					},
					{
						"name": "Time",
						"type": "String"
					},
					{
						"name": "Subscription",
						"type": "String"
					},
					{
						"name": "Event initiated by",
						"type": "String"
					},
					{
						"name": "Resource type",
						"type": "String"
					},
					{
						"name": "Resource group",
						"type": "String"
					},
					{
						"name": "Resource",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sdatalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/logstorage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sstorage1207a",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "PT1H.json",
						"container": "staging"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"time": {
							"type": "string"
						},
						"resourceId": {
							"type": "string"
						},
						"category": {
							"type": "string"
						},
						"operationName": {
							"type": "string"
						},
						"operationVersion": {
							"type": "string"
						},
						"schemaVersion": {
							"type": "string"
						},
						"statusCode": {
							"type": "integer"
						},
						"statusText": {
							"type": "string"
						},
						"durationMs": {
							"type": "integer"
						},
						"callerIpAddress": {
							"type": "string"
						},
						"correlationId": {
							"type": "string"
						},
						"identity": {
							"type": "object",
							"properties": {
								"type": {
									"type": "string"
								},
								"tokenHash": {
									"type": "string"
								},
								"authorization": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"action": {
												"type": "string"
											},
											"roleAssignmentId": {
												"type": "string"
											},
											"roleDefinitionId": {
												"type": "string"
											},
											"principals": {
												"type": "array"
											},
											"denyAssignmentId": {
												"type": "string"
											},
											"type": {
												"type": "string"
											},
											"result": {
												"type": "string"
											},
											"reason": {
												"type": "string"
											}
										}
									}
								},
								"requester": {
									"type": "object",
									"properties": {
										"appId": {
											"type": "string"
										},
										"audience": {
											"type": "string"
										},
										"objectId": {
											"type": "string"
										},
										"tenantId": {
											"type": "string"
										},
										"tokenIssuer": {
											"type": "string"
										}
									}
								}
							}
						},
						"location": {
							"type": "string"
						},
						"properties": {
							"type": "object",
							"properties": {
								"accountName": {
									"type": "string"
								},
								"serviceType": {
									"type": "string"
								},
								"objectKey": {
									"type": "string"
								},
								"metricResponseType": {
									"type": "string"
								},
								"serverLatencyMs": {
									"type": "integer"
								},
								"requestHeaderSize": {
									"type": "integer"
								},
								"responseHeaderSize": {
									"type": "integer"
								},
								"responseBodySize": {
									"type": "integer"
								},
								"tlsVersion": {
									"type": "string"
								},
								"etag": {
									"type": "string"
								},
								"lastModifiedTime": {
									"type": "string"
								},
								"userAgentHeader": {
									"type": "string"
								}
							}
						},
						"uri": {
							"type": "string"
						},
						"protocol": {
							"type": "string"
						},
						"resourceType": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sstorage1207a')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/stagingoutputsstorage1207')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sstorage1207a",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "stagingoutput"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sstorage1207a')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/csv-parquet')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Correlation id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Correlationid",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Operation name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Operationname",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Event category",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Eventcategory",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Level",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Level",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Time",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Time",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Subscription",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Subscription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Event initiated by",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Eventinitiatedby",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Resource type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Resourcetype",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Resource group",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Resourcegroup",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Resource",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Resource",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "logdatacsv",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "logdata_synapse",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/logdatacsv')]",
				"[concat(variables('factoryId'), '/datasets/logdata_synapse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/logdata_storage')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "logstorage",
								"type": "DatasetReference"
							},
							"name": "logdata"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "stagingoutputsstorage1207",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          time as string,",
						"          resourceId as string,",
						"          category as string,",
						"          operationName as string,",
						"          operationVersion as string,",
						"          schemaVersion as string,",
						"          statusCode as integer,",
						"          statusText as string,",
						"          durationMs as integer,",
						"          callerIpAddress as string,",
						"          correlationId as string,",
						"          identity as (type as string, tokenHash as string, authorization as (action as string, roleAssignmentId as string, roleDefinitionId as string, principals as string[], denyAssignmentId as string, type as string, result as string, reason as string)[], requester as (appId as string, audience as string, objectId as string, tenantId as string, tokenIssuer as string)),",
						"          location as string,",
						"          properties as (accountName as string, serviceType as string, objectKey as string, metricResponseType as string, serverLatencyMs as integer, requestHeaderSize as integer, responseHeaderSize as integer, responseBodySize as integer, tlsVersion as string, etag as string, lastModifiedTime as string, userAgentHeader as string),",
						"          uri as string,",
						"          protocol as string,",
						"          resourceType as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine') ~> logdata",
						"logdata select(mapColumn(",
						"          time,",
						"          resourceId,",
						"          category",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/logstorage')]",
				"[concat(variables('factoryId'), '/datasets/stagingoutputsstorage1207')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/logdata_storage_metrics')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "logdata_storage",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"logdata": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "logdata_metrics",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Data flow1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "stagingoutputsstorage1207",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "logdata_metrics",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/logdata_storage')]",
				"[concat(variables('factoryId'), '/datasets/stagingoutputsstorage1207')]",
				"[concat(variables('factoryId'), '/datasets/logdata_metrics')]"
			]
		}
	]
}